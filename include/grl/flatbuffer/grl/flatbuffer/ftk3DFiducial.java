// automatically generated by the FlatBuffers compiler, do not modify

package grl.flatbuffer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ftk3DFiducial extends Table {
  public static ftk3DFiducial getRootAsftk3DFiducial(ByteBuffer _bb) { return getRootAsftk3DFiducial(_bb, new ftk3DFiducial()); }
  public static ftk3DFiducial getRootAsftk3DFiducial(ByteBuffer _bb, ftk3DFiducial obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ftk3DFiducial __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long markerID() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long leftIndex() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long rightIndex() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public Vector3d position() { return position(new Vector3d()); }
  public Vector3d position(Vector3d obj) { int o = __offset(10); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public double epipolarErrorPixels() { int o = __offset(12); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double triangulationError() { int o = __offset(14); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double probability() { int o = __offset(16); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static void startftk3DFiducial(FlatBufferBuilder builder) { builder.startObject(7); }
  public static void addMarkerID(FlatBufferBuilder builder, long markerID) { builder.addInt(0, (int)markerID, (int)0L); }
  public static void addLeftIndex(FlatBufferBuilder builder, long leftIndex) { builder.addInt(1, (int)leftIndex, (int)0L); }
  public static void addRightIndex(FlatBufferBuilder builder, long rightIndex) { builder.addInt(2, (int)rightIndex, (int)0L); }
  public static void addPosition(FlatBufferBuilder builder, int positionOffset) { builder.addStruct(3, positionOffset, 0); }
  public static void addEpipolarErrorPixels(FlatBufferBuilder builder, double epipolarErrorPixels) { builder.addDouble(4, epipolarErrorPixels, 0.0); }
  public static void addTriangulationError(FlatBufferBuilder builder, double triangulationError) { builder.addDouble(5, triangulationError, 0.0); }
  public static void addProbability(FlatBufferBuilder builder, double probability) { builder.addDouble(6, probability, 0.0); }
  public static int endftk3DFiducial(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

