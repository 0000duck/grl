# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuffer

import flatbuffers

class EulerRotation(object):
    __slots__ = ['_tab']

    # EulerRotation
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EulerRotation
    def R1(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # EulerRotation
    def R2(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # EulerRotation
    def R3(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))
    # EulerRotation
    def EulerOrder(self): return self._tab.Get(flatbuffers.number_types.Int8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(24))

def CreateEulerRotation(builder, r1, r2, r3, eulerOrder):
    builder.Prep(8, 32)
    builder.Pad(7)
    builder.PrependInt8(eulerOrder)
    builder.PrependFloat64(r3)
    builder.PrependFloat64(r2)
    builder.PrependFloat64(r1)
    return builder.Offset()
