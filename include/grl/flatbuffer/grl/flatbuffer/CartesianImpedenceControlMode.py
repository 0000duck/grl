# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuffer

import flatbuffers

class CartesianImpedenceControlMode(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCartesianImpedenceControlMode(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CartesianImpedenceControlMode()
        x.Init(buf, n + offset)
        return x

    # CartesianImpedenceControlMode
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

# /// actual stiffness to set rot:[nm/rad]
    # CartesianImpedenceControlMode
    def Stiffness(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from .EulerPose import EulerPose
            obj = EulerPose()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

# /// actual damping to set
    # CartesianImpedenceControlMode
    def Damping(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from .EulerPose import EulerPose
            obj = EulerPose()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

# /// [Nm/rad] must be => 0.0
    # CartesianImpedenceControlMode
    def NullspaceStiffness(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

# /// must be between 0.3-1.0 suggested is 0.7
    # CartesianImpedenceControlMode
    def NullspaceDamping(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

# /// maximum deviation from set goal in mm and radians
    # CartesianImpedenceControlMode
    def MaxPathDeviation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = o + self._tab.Pos
            from .EulerPose import EulerPose
            obj = EulerPose()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

# /// trans: [mm/s] rot: [rad/s]
    # CartesianImpedenceControlMode
    def MaxCartesianVelocity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = o + self._tab.Pos
            from .EulerPose import EulerPose
            obj = EulerPose()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

# /// xyz: Newtons rpy:Nm (all >=0)
    # CartesianImpedenceControlMode
    def MaxControlForce(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            x = o + self._tab.Pos
            from .EulerPose import EulerPose
            obj = EulerPose()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

# /// stop if max control force is exceeded
    # CartesianImpedenceControlMode
    def MaxControlForceExceededStop(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos)
        return 0

def CartesianImpedenceControlModeStart(builder): builder.StartObject(8)
def CartesianImpedenceControlModeAddStiffness(builder, stiffness): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(stiffness), 0)
def CartesianImpedenceControlModeAddDamping(builder, damping): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(damping), 0)
def CartesianImpedenceControlModeAddNullspaceStiffness(builder, nullspaceStiffness): builder.PrependFloat64Slot(2, nullspaceStiffness, 0.0)
def CartesianImpedenceControlModeAddNullspaceDamping(builder, nullspaceDamping): builder.PrependFloat64Slot(3, nullspaceDamping, 0.0)
def CartesianImpedenceControlModeAddMaxPathDeviation(builder, maxPathDeviation): builder.PrependStructSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(maxPathDeviation), 0)
def CartesianImpedenceControlModeAddMaxCartesianVelocity(builder, maxCartesianVelocity): builder.PrependStructSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(maxCartesianVelocity), 0)
def CartesianImpedenceControlModeAddMaxControlForce(builder, maxControlForce): builder.PrependStructSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(maxControlForce), 0)
def CartesianImpedenceControlModeAddMaxControlForceExceededStop(builder, maxControlForceExceededStop): builder.PrependBoolSlot(7, maxControlForceExceededStop, 0)
def CartesianImpedenceControlModeEnd(builder): return builder.EndObject()
