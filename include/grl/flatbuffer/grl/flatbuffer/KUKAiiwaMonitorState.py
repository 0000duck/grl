# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuffer

import flatbuffers

class KUKAiiwaMonitorState(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsKUKAiiwaMonitorState(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KUKAiiwaMonitorState()
        x.Init(buf, n + offset)
        return x

    # KUKAiiwaMonitorState
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # KUKAiiwaMonitorState
    def MeasuredState(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .JointState import JointState
            obj = JointState()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # KUKAiiwaMonitorState
    def CartesianFlangePose(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from .Pose import Pose
            obj = Pose()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # KUKAiiwaMonitorState
    def JointStateReal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .JointState import JointState
            obj = JointState()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # KUKAiiwaMonitorState
    def JointStateInterpolated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .JointState import JointState
            obj = JointState()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

# /// The state of the arm as calculated by kuka after
# /// subtracting the known weights of the arm
# /// and any attachments configured to be present.
# ///
# /// Most likely only contains torque.
# /// KukaState::ExternalTorque goes here
    # KUKAiiwaMonitorState
    def ExternalState(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .JointState import JointState
            obj = JointState()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

# /// KUKA::FRI::EOperationMode
    # KUKAiiwaMonitorState
    def OperationMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # KUKAiiwaMonitorState
    def SessionState(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # KUKAiiwaMonitorState
    def CartesianWrench(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            x = o + self._tab.Pos
            from .Wrench import Wrench
            obj = Wrench()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def KUKAiiwaMonitorStateStart(builder): builder.StartObject(8)
def KUKAiiwaMonitorStateAddMeasuredState(builder, measuredState): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(measuredState), 0)
def KUKAiiwaMonitorStateAddCartesianFlangePose(builder, cartesianFlangePose): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(cartesianFlangePose), 0)
def KUKAiiwaMonitorStateAddJointStateReal(builder, jointStateReal): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(jointStateReal), 0)
def KUKAiiwaMonitorStateAddJointStateInterpolated(builder, jointStateInterpolated): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(jointStateInterpolated), 0)
def KUKAiiwaMonitorStateAddExternalState(builder, externalState): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(externalState), 0)
def KUKAiiwaMonitorStateAddOperationMode(builder, operationMode): builder.PrependInt8Slot(5, operationMode, 0)
def KUKAiiwaMonitorStateAddSessionState(builder, sessionState): builder.PrependInt8Slot(6, sessionState, 0)
def KUKAiiwaMonitorStateAddCartesianWrench(builder, CartesianWrench): builder.PrependStructSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(CartesianWrench), 0)
def KUKAiiwaMonitorStateEnd(builder): return builder.EndObject()
