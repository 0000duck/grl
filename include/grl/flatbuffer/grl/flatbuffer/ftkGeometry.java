// automatically generated by the FlatBuffers compiler, do not modify

package grl.flatbuffer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ftkGeometry extends Table {
  public static ftkGeometry getRootAsftkGeometry(ByteBuffer _bb) { return getRootAsftkGeometry(_bb, new ftkGeometry()); }
  public static ftkGeometry getRootAsftkGeometry(ByteBuffer _bb, ftkGeometry obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ftkGeometry __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public long geometryID() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long version() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public Vector3d positions(int j) { return positions(new Vector3d(), j); }
  public Vector3d positions(Vector3d obj, int j) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o) + j * 24, bb) : null; }
  public int positionsLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }

  public static int createftkGeometry(FlatBufferBuilder builder,
      int nameOffset,
      long geometryID,
      long version,
      int positionsOffset) {
    builder.startObject(4);
    ftkGeometry.addPositions(builder, positionsOffset);
    ftkGeometry.addVersion(builder, version);
    ftkGeometry.addGeometryID(builder, geometryID);
    ftkGeometry.addName(builder, nameOffset);
    return ftkGeometry.endftkGeometry(builder);
  }

  public static void startftkGeometry(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addGeometryID(FlatBufferBuilder builder, long geometryID) { builder.addInt(1, (int)geometryID, (int)0L); }
  public static void addVersion(FlatBufferBuilder builder, long version) { builder.addInt(2, (int)version, (int)0L); }
  public static void addPositions(FlatBufferBuilder builder, int positionsOffset) { builder.addOffset(3, positionsOffset, 0); }
  public static void startPositionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(24, numElems, 8); }
  public static int endftkGeometry(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

