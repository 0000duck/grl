# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuffer

import flatbuffers

class MoveArmCartesianServo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsMoveArmCartesianServo(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MoveArmCartesianServo()
        x.Init(buf, n + offset)
        return x

    # MoveArmCartesianServo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MoveArmCartesianServo
    def Parent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # MoveArmCartesianServo
    def Goal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from .Pose import Pose
            obj = Pose()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def MoveArmCartesianServoStart(builder): builder.StartObject(2)
def MoveArmCartesianServoAddParent(builder, parent): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(parent), 0)
def MoveArmCartesianServoAddGoal(builder, goal): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(goal), 0)
def MoveArmCartesianServoEnd(builder): return builder.EndObject()
